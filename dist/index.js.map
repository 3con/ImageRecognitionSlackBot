{"version":3,"sources":["../index.js"],"names":["config","update","region","rekognition","Rekognition","settings","token","name","bot","params","icon_emoji","channelOrGroup","postOrGroupName","sendMessage","messageText","postMessageToChannel","postMessageToGroup","queryRekognition","base64Image","detectLabels","Image","Bytes","err","data","console","log","Labels","Name","toLocaleLowerCase","on","text","toUpperCase","startsWith","url","substring","length","error","result"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA,iBAAIA,MAAJ,CAAWC,MAAX,CAAkB,EAACC,QAAQ,WAAT,EAAlB;;AAEA,IAAMC,cAAc,IAAI,iBAAIC,WAAR,EAApB;;AAEA;AACA,IAAMC,WAAW;AACbC,yBADa;AAEbC,UAAM;AAFO,CAAjB;;AAKA,IAAMC,MAAM,wBAAQH,QAAR,CAAZ;;AAEA;AACA,IAAMI,SAAS;AACXC,gBAAY;AADD,CAAf;;AAIA;AACA,IAAMC,iBAAiB,OAAvB;AACA,IAAMC,kBAAkB,eAAxB;;AAEA;AACA,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AAC9B,QAAIH,mBAAmB,SAAvB,EAAkC;AAC9BH,YAAIO,oBAAJ,CAAyBH,eAAzB,EAA0CE,WAA1C,EAAuDL,MAAvD;AACH,KAFD,MAGK;AACDD,YAAIQ,kBAAJ,CAAuBJ,eAAvB,EAAwCE,WAAxC,EAAqDL,MAArD;AACH;AACJ;;AAED;AACA,SAASQ,gBAAT,CAA0BC,WAA1B,EAAuC;AACnCf,gBAAYgB,YAAZ,CAAyB;AACrBC,eAAO;AACHC,mBAAOH;AADJ;AADc,KAAzB,EAIG,UAAUI,GAAV,EAAeC,IAAf,EAAqB;AACpB,YAAID,GAAJ,EACIE,QAAQC,GAAR,CAAYH,GAAZ,EADJ,KAGIT,iCAA+BU,KAAKG,MAAL,CAAY,CAAZ,EAAeC,IAAf,CAAoBC,iBAApB,EAA/B,cAA+EL,KAAKG,MAAL,CAAY,CAAZ,EAAeC,IAAf,CAAoBC,iBAApB,EAA/E;AACP,KATD;AAUH;;AAED;AACApB,IAAIqB,EAAJ,CAAO,SAAP,EAAkB,UAAUN,IAAV,EAAgB;AAC9B;AACA;;AAEA;AACA,QAAIA,KAAKO,IAAT,EAAe;AACX;AACA,YAAIP,KAAKO,IAAL,CAAUC,WAAV,GAAwBC,UAAxB,CAAmC,gCAAnC,CAAJ,EAA0E;AACtER,oBAAQC,GAAR,CAAY,iBAAZ;AACA,gBAAIQ,MAAMV,KAAKO,IAAL,CAAUI,SAAV,CAAoB,iCAAiCC,MAAjC,GAA0C,CAA9D,EAAiEZ,KAAKO,IAAL,CAAUK,MAAV,GAAmB,CAApF,CAAV;AACAX,oBAAQC,GAAR,CAAYQ,GAAZ;AACA,yCAAOA,GAAP,EAAY,EAAZ,EAAgB,UAACG,KAAD,EAAQC,MAAR;AAAA,uBAAmBpB,iBAAiBoB,MAAjB,CAAnB;AAAA,aAAhB;AACH;AACJ;AACJ,CAdD","file":"index.js","sourcesContent":["import AWS from 'aws-sdk';\nimport Bot from \"slackbots\";\nimport {TOKEN} from \"./secrets\";\nimport {encode} from 'node-base64-image';\n\nAWS.config.update({region: 'eu-west-1'});\n\nconst rekognition = new AWS.Rekognition();\n\n// create a bot\nconst settings = {\n    token: TOKEN,\n    name: 'SeeingEyeBot'\n};\n\nconst bot = new Bot(settings);\n\n// give him a face\nconst params = {\n    icon_emoji: ':robot_face:'\n};\n\n// define group or channel that we are posting to\nconst channelOrGroup = 'group';\nconst postOrGroupName = 'geeking_it_up';\n\n// function to send a message to either a group (private channel) or a channel\nfunction sendMessage(messageText) {\n    if (channelOrGroup === 'channel') {\n        bot.postMessageToChannel(postOrGroupName, messageText, params);\n    }\n    else {\n        bot.postMessageToGroup(postOrGroupName, messageText, params);\n    }\n}\n\n// send image to AWS Rekognition and send a message with the results\nfunction queryRekognition(base64Image) {\n    rekognition.detectLabels({\n        Image: {\n            Bytes: base64Image\n        }\n    }, function (err, data) {\n        if (err)\n            console.log(err);\n        else\n            sendMessage(`That looks like ${data.Labels[0].Name.toLocaleLowerCase()} or a ${data.Labels[1].Name.toLocaleLowerCase()} to me`);\n    });\n}\n\n// listen for messages to\nbot.on('message', function (data) {\n    // all ingoing events https://api.slack.com/rtm\n    //console.log(data);\n\n    // check that the message has text\n    if (data.text) {\n        // start a new game\n        if (data.text.toUpperCase().startsWith('@WHAT-IS-THIS-BOT WHAT IS THIS')) {\n            console.log('we have a match');\n            let url = data.text.substring('@WHAT-IS-THIS-BOT WHAT IS THIS'.length + 2, data.text.length - 1);\n            console.log(url);\n            encode(url, {}, (error, result) => queryRekognition(result));\n        }\n    }\n});"]}